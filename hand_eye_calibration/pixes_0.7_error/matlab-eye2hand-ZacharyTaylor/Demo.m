
% R_vector_matrix = [ 1.5108, -1.6518, 1.5991; 
%            1.6515,-1.4369,1.4589;
%            1.7299,-1.2986,1.3669;
%            1.3711,-1.9393,1.6788;
%            1.6842,-1.5588, 1.5647;
%             1.6121,-1.4808,1.6593;
%             1.6841,-1.3753,1.5750;
%             1.7496,-1.2281,1.4905;
%             1.7401,-1.4328,1.6687;
%             1.7589,-1.2884,1.4886;
%             1.4766,-1.5928,1.5221;
%             1.6320,-1.3179,1.3480;
%             1.3643,-1.7907,1.6136;
%             1.5848,-1.5613,1.5690;
%             1.6652,-1.3975,1.4831;
%             1.7597,-1.2691,1.3669;
%             1.5926,-1.6508,1.5450;
%             1.4135,-1.5607,1.4505;
%             1.3496,-1.5532,1.5269;
%             1.3103,-1.5541,1.5443;
%             1.4752,-1.5442,1.6623;
%             1.4793,-1.5078,1.7049];
%    T_matrix=[ 0.0890,-0.6015,0.5956; 
%              0.0902,-0.6029,0.5932;
%              0.0905,-0.6038,0.5915;
%              0.0906,-0.6042,0.5908;
%              0.1575,-0.5906,0.5909;
%              0.1548,-0.5841,0.6017;
%              0.1557,-0.5859,0.5988;
%              0.1562,-0.5863,0.5980;
%              0.2116,-0.5690,0.5976;
%              0.2063,-0.5744,0.5949;
%              0.1079,-0.4767,0.5478;
%              0.1082,-0.4775,0.5465;
%              0.1082,-0.4776,0.5462;
%              0.1547,-0.4647,0.5462;
%              0.1548,-0.4647,0.5461;
%              0.1562,-0.4670,0.5418;
%              0.1567,-0.4676,0.5403;
%              0.1901,-0.4468,0.5199;
%              0.1466,-0.4326,0.5509;
%              0.1618,-0.4871,0.5673;
%              0.1321,-0.4191,0.5494;
%              0.0858,-0.3468,0.5426];
%          

% R_vector_matrix = [ 1.303494119547863, -1.807256572047172, 1.211278318971586; 
%           1.469973818016992, -1.551581679903994, 1.590415630761301;
%           1.566498887770904, -1.415234538330967, 1.484080244882764;
%           1.476484512105868, -1.942284977671208, 1.601169831785661;
%            1.581428184269192, -1.579926645478777, 1.58270141622508;
%             1.581471800864976, -1.579878411629945, 1.582755852558658;
%            1.700719722990125, -1.329544997459615, 1.45165485971369;
%             1.896476296716485, -1.294072826220648, 1.55146471625544;
%             1.592507293396194, -1.462493125172613, 1.625855071997961;
%            1.49439265668491, -1.700021735578258, 1.776798115070954;
%            1.572647389718169, -1.369422891960061, 1.670822391958064;
%            1.600951492755882, -1.61371430050714, 1.568133097334253;
%             1.610235278198675, -1.623101868055673, 1.556258021777881;
%            1.449884212654432, -1.931185281153344, 1.706577427474099;
%            1.816405298942019, -1.208990684292982, 1.373679936747925];
%    T_matrix=[0.02552685643380189, -0.4403284928324739, 0.7570405488991824; 
%              0.02694596273498117, -0.3796025357376802, 0.7057203265232097;
%              0.02759334118141451, -0.3812219922646022, 0.7034550705702756;
%              0.03652105845752259, -0.3883093651472191, 0.6866023991809689;
%              -0.01419437273781497, -0.254870236276293, 0.6549910467482245;
%             -0.01418526708595626, -0.2548602229224508, 0.6550037919588024;
%              -0.01416459712504154, -0.2548403482681143, 0.6548915841844132;
%              0.000887022603751888, -0.2508364961669122, 0.6490472332593846;
%              -0.03710755048316604, -0.1883929960022074, 0.6890950672129458;
%              -0.03478741869643066, -0.1866739125735252, 0.6893773348600007;
%              -0.07061305005949541, -0.09733655261078671, 0.68199573236417;
%              0.05100747243772177, -0.4241022025275036, 0.6843828061226465;
%              0.07613979959380883, -0.4893134852725957, 0.6853316437924081;
%              0.07852220055400473, -0.4891205837992681, 0.683217583231099;
%              0.07872562727316139, -0.4885800464604342, 0.6838194831754042];

%  R_vector_matrix = [1.4895,-1.1767,1.6325;
%                      1.5622,-0.9640,1.4764;
%                      1.3476,-1.4612,1.8545;
%                      1.4701,-1.3052,1.6329;
%                      1.5489,-1.1326,1.5214;
%                      1.4459,-1.6217,1.7348;
%                      1.5342,-1.3172,1.5190;
%                      1.3617,-1.4308,1.4871;
%                      1.5345,-1.3667,1.6122;
%                      1.4425,-1.3651,1.5452;
%                      1.5627,-1.1806,1.3824;
%                      1.4104,-1.5897,1.6995;
%                      1.4793,-1.2615,1.6229;
%                      1.4334,-1.3225,1.5839;
%                      1.3239,-1.5626,1.7493;
%                      1.6875,-1.0253,1.5279;
%                      1.7472,-0.7584,1.3499;
%                      1.6390,-1.2424,1.5707;
%                      1.7920,-1.1878,1.4503;
%                      1.6706,-1.0974,1.5519;
%                      1.6466,-1.3310,1.6294;
%                      1.6769,-1.2933,1.6806;
%                      1.7838,-1.0166,1.5023;
%                      1.7958,-1.3974,1.5567;
%                      1.5932,-1.3353,1.6029;
%                      1.6948,-1.0608,1.4359];
%  T_matrix=[-0.0202,-0.5802,0.4742;
%             -0.0202,-0.5802,0.4743;
%             -0.0284,-0.5463,0.5250;
%             -0.0594,-0.3451,0.5891;
%             -0.0587,-0.3450,0.5889;
%             -0.0562,-0.3529,0.5795;
%             0.0620,-0.3513,0.5915;
%             0.1222,-0.3362,0.5938;
%             0.1371,-0.3310,0.5926;
%             0.1893,-0.3030,0.5687;
%             0.1923,-0.3045,0.5655;
%             0.1971,-0.3026,0.5648;
%             0.0954,-0.2415,0.5608;
%             -0.0416,-0.1894,0.5711;
%             -0.0400,-0.1897,0.5702;
%             -0.0271,-0.1860,0.5678;
%             -0.0273,-0.1861,0.5677;
%             -0.0607,-0.1220,0.5330;
%             -0.0550,-0.1279,0.522;
%             -0.0705,-0.0951,0.5852;
%             -0.0614,-0.1148,0.6313;
%             -0.0807,-0.0632,0.6367;
%             -0.0794,-0.0655,0.6342;
%             -0.0363,-0.1583,0.6508;
%             -0.0487,-0.1521,0.6658;
%             -0.0486,-0.1521,0.6658];
%          
%   armMat=rand(4,4,26);
% 
% %  for i=1:26
% %    expression = ['RR', int2str(i),' = Trans_vect_to_matrix(R_vector_matrix(i,:));'];
% %    eval(expression);
% %  end
%  
%  for i=1:26
%    armMat(1:3,1:3,i)=Trans_vect_to_matrix(R_vector_matrix(i,:));
%    armMat(1:3,4,i)=T_matrix(i,:);
%    armMat(4,:,i)=0;
%    armMat(4,4,i)=1;
%  end
%  
% save 'Example Data/armMat.mat' armMat;
% 
% %Simple script to quickly demo use of CalCamArm.m
% %path to images of checkerboards
% imageFolder = './Example Data/Images/';
% %loading arm transformations
% load('./Example Data/armMat.mat');
% %checkerboard square widths in mm
% squareSize = 15;
% 
% %run calibration
% [TBase, TEnd, cameraParams, TBaseStd, TEndStd, pixelErr] = CalCamArm(imageFolder, armMat, squareSize,'maxBaseOffset',0.5);
% 
% %print results
% fprintf('\nFinal camera to arm base transform is\n')
% disp(TBase);
% 
% fprintf('Final end effector to checkerboard transform is\n')
% disp(TEnd);
% 
% fprintf('Final camera matrix is\n')
% disp(cameraParams.IntrinsicMatrix');
% 
% fprintf('Final camera radial distortion parameters are\n')
% disp(cameraParams.RadialDistortion);
% 
% % fprintf('Final camera tangential distortion parameters are\n')
% disp(cameraParams.TangentialDistortion);

load TCP_position.txt;
         
armMat=rand(4,4,12);
 
 for i=1:12
   armMat(1:3,1:3,i)=Trans_vect_to_matrix(TCP_position(i*2-1,:));
   armMat(1:3,4,i)=TCP_position(i*2,:);
   armMat(4,:,i)=0;
   armMat(4,4,i)=1;
 end
 
save 'Example Data/armMat.mat' armMat;


imageFolder = './Example Data/Images/';
%loading arm transformations
load('./Example Data/armMat.mat');
%checkerboard square widths in mm
squareSize = 15;

%run calibration
[TBase, TEnd, cameraParams, TBaseStd, TEndStd, pixelErr] = CalCamArm(imageFolder, armMat, squareSize,'maxBaseOffset',0.5);

%print results
fprintf('\nFinal camera to arm base transform is\n')
disp(TBase);

fprintf('Final end effector to checkerboard transform is\n')
disp(TEnd);

fprintf('Final camera matrix is\n')
disp(cameraParams.IntrinsicMatrix');

fprintf('Final camera radial distortion parameters are\n')
disp(cameraParams.RadialDistortion);

% fprintf('Final camera tangential distortion parameters are\n')
disp(cameraParams.TangentialDistortion);